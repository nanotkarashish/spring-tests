buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE',
                'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.2',
                'org.akhikhl.gretty:gretty:2.0.0'
        )
    }
}

apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'org.akhikhl.gretty'

//If you are using Gradle 2.1+, you can use the new Plugins DSL. The
//following snippet replaces every line above this comment:
/*plugins {
    id 'java'
    id 'org.unbroken-dome.test-sets' version '1.2.0'
}*/


testSets {
    endToEndTest { dirName = 'end-to-end-test' }
    integrationTest { dirName = 'integration-test' }
}

check.dependsOn integrationTest
check.dependsOn endToEndTest
endToEndTest.mustRunAfter integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

gretty {
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9.4'
    integrationTestTask = 'endToEndTest'
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR5'
    }
}

dependencies {
    compile(
            'org.slf4j:slf4j-api',
            'log4j:log4j',
            'org.slf4j:slf4j-log4j12',
            'org.slf4j:jcl-over-slf4j',
            'org.springframework:spring-aspects',
            'org.springframework:spring-context-support',
            'org.springframework:spring-webmvc',
    )
    providedCompile(
            'javax.servlet:javax.servlet-api'
    )
    runtime(
            'javax.servlet:jstl',
            // We need to declare this dependency or otherwise we get the following error when we start Jetty:
            // Provider ch.qos.logback.classic.servlet.LogbackServletContainerInitializer not found
            'ch.qos.logback:logback-classic:1.2.3'
    )
    testCompile(
            'javax.el:javax.el-api',
            'org.glassfish.web:el-impl:2.2',
            'junit:junit',
            'org.hamcrest:hamcrest-library',
            'org.springframework:spring-test',
            'org.codehaus.groovy:groovy-all:2.4.11',
            'org.spockframework:spock-core:1.1-groovy-2.4'
    )
    testRuntime('com.athaydes:spock-reports:1.3.1') {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
    integrationTestRuntime(
            'org.spockframework:spock-spring:1.1-groovy-2.4'
    )
    endToEndTestCompile(
            'org.seleniumhq.selenium:selenium-java:3.7.1'
    )
}

test {
    useJUnit {
        includeCategories 'com.testwithspring.master.UnitTest'
    }
    testLogging {
        showStandardStreams = true
    }
}

integrationTest {
    useJUnit {
        includeCategories 'com.testwithspring.master.IntegrationTest'
    }
    testLogging {
        showStandardStreams = true
    }
}

endToEndTest {
    useJUnit {
        includeCategories 'com.testwithspring.master.EndToEndTest'
    }
    testLogging {
        showStandardStreams = true
    }
}